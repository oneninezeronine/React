<template name="Search">
  <div className={this.state.isFocus ? 'weui-search-bar' : 'weui-search-bar weui-search-bar_focusing' } id="searchBar">
    <form className="weui-search-bar__form">
      <div className="weui-search-bar__box">
        <i className="weui-icon-search"></i>
        <input ref="input" value={this.state.searchText} onChange={this.getInputValue.bind(this)} type="search"
          className="weui-search-bar__input" id="searchInput" placeholder="搜索" required={true} />
        <a onClick={this.clear.bind(this)} className="weui-icon-clear" id="searchClear"></a>
      </div>
      <label onClick={this.toggle.bind(this)} className="weui-search-bar__label" id="searchText" style={{
                        transformOrigin: '0px 0px',
                        opacity: 1,
                        transform: 'scale(1, 1)'
                    }}>
        <i className="weui-icon-search"></i>
        <span>搜索</span>
      </label>
    </form>
    <a onClick={this.toggle.bind(this)} className="weui-search-bar__cancel-btn" id="searchCancel">取消</a>
  </div>
</template>
<script>
  import stores from '../../stores'
  export default class {
    constructor(props) {
      super(props)
      this.state = {
        isFocus: true,
        searchText: ''
      }
    }
    toggle() {
      // this.isFocus = !this.isFocus
      this.setState({
        isFocus: !this.state.isFocus
      })
      // 聚焦输入框
      this.refs.input.focus()
    }
    getInputValue(event) {
      // 触发dispatch更改仓库状态，把搜索值设置到仓库里面  
      stores.dispatch({
        type: 'SETSEARCHTEXT',
        searchText: event.target.value
      })
      this.setState({
        searchText: event.target.value
      })
    }
    clear() {
      console.log(this)
      this.setState({
        searchText: ''
      })
      // 聚焦输入框
      this.refs.input.focus()
    }
  }

</script>
